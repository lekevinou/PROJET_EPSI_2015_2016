<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class CaracUnite extends \Entities\CaracUnite implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getIdUnite()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["idUnite"];
        }
        $this->__load();
        return parent::getIdUnite();
    }

    public function setNomUnite($nomUnite)
    {
        $this->__load();
        return parent::setNomUnite($nomUnite);
    }

    public function getNomUnite()
    {
        $this->__load();
        return parent::getNomUnite();
    }

    public function setDescriptionUnite($descriptionUnite)
    {
        $this->__load();
        return parent::setDescriptionUnite($descriptionUnite);
    }

    public function getDescriptionUnite()
    {
        $this->__load();
        return parent::getDescriptionUnite();
    }

    public function setAttaqueUnite($attaqueUnite)
    {
        $this->__load();
        return parent::setAttaqueUnite($attaqueUnite);
    }

    public function getAttaqueUnite()
    {
        $this->__load();
        return parent::getAttaqueUnite();
    }

    public function setDefenseInfanterieUnite($defenseInfanterieUnite)
    {
        $this->__load();
        return parent::setDefenseInfanterieUnite($defenseInfanterieUnite);
    }

    public function getDefenseInfanterieUnite()
    {
        $this->__load();
        return parent::getDefenseInfanterieUnite();
    }

    public function setDefenseDistantUnite($defenseDistantUnite)
    {
        $this->__load();
        return parent::setDefenseDistantUnite($defenseDistantUnite);
    }

    public function getDefenseDistantUnite()
    {
        $this->__load();
        return parent::getDefenseDistantUnite();
    }

    public function setDefenseCavalerieUnite($defenseCavalerieUnite)
    {
        $this->__load();
        return parent::setDefenseCavalerieUnite($defenseCavalerieUnite);
    }

    public function getDefenseCavalerieUnite()
    {
        $this->__load();
        return parent::getDefenseCavalerieUnite();
    }

    public function setVitesseUnite($vitesseUnite)
    {
        $this->__load();
        return parent::setVitesseUnite($vitesseUnite);
    }

    public function getVitesseUnite()
    {
        $this->__load();
        return parent::getVitesseUnite();
    }

    public function setCapaciteTransportUnite($capaciteTransportUnite)
    {
        $this->__load();
        return parent::setCapaciteTransportUnite($capaciteTransportUnite);
    }

    public function getCapaciteTransportUnite()
    {
        $this->__load();
        return parent::getCapaciteTransportUnite();
    }

    public function setIdTypeUnite($idTypeUnite)
    {
        $this->__load();
        return parent::setIdTypeUnite($idTypeUnite);
    }

    public function getIdTypeUnite()
    {
        $this->__load();
        return parent::getIdTypeUnite();
    }

    public function setCoutBoisUnite($coutBoisUnite)
    {
        $this->__load();
        return parent::setCoutBoisUnite($coutBoisUnite);
    }

    public function getCoutBoisUnite()
    {
        $this->__load();
        return parent::getCoutBoisUnite();
    }

    public function setCoutFerUnite($coutFerUnite)
    {
        $this->__load();
        return parent::setCoutFerUnite($coutFerUnite);
    }

    public function getCoutFerUnite()
    {
        $this->__load();
        return parent::getCoutFerUnite();
    }

    public function setCoutPierreUnite($coutPierreUnite)
    {
        $this->__load();
        return parent::setCoutPierreUnite($coutPierreUnite);
    }

    public function getCoutPierreUnite()
    {
        $this->__load();
        return parent::getCoutPierreUnite();
    }

    public function setCoutNourritureUnite($coutNourritureUnite)
    {
        $this->__load();
        return parent::setCoutNourritureUnite($coutNourritureUnite);
    }

    public function getCoutNourritureUnite()
    {
        $this->__load();
        return parent::getCoutNourritureUnite();
    }

    public function setTempsCreationUnite($tempsCreationUnite)
    {
        $this->__load();
        return parent::setTempsCreationUnite($tempsCreationUnite);
    }

    public function getTempsCreationUnite()
    {
        $this->__load();
        return parent::getTempsCreationUnite();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'idUnite', 'nomUnite', 'descriptionUnite', 'attaqueUnite', 'defenseInfanterieUnite', 'defenseDistantUnite', 'defenseCavalerieUnite', 'vitesseUnite', 'capaciteTransportUnite', 'idTypeUnite', 'coutBoisUnite', 'coutFerUnite', 'coutPierreUnite', 'coutNourritureUnite', 'tempsCreationUnite');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}